(define (make-slider-state style layout #!optional description value)
  `((max . 100)
    (style . ,(make-widget-model style))
    (layout . ,(make-widget-model layout))
    (orientation . "horizontal")
    (continuous_update . #t)
    (step . 1)
    (readout_format . "d")
    (readout . #t)
    (disabled . #f)
    (description . ,(if (default-object? description) "" description))
    (value . ,(if (default-object? value) 0 value))))

(define (make-slider #!optional description value)
  (let ((style (make-widget "SliderStyleModel" "StyleView"))
        (layout (make-widget "LayoutModel" "LayoutView")))
    (let ((state (make-slider-state style layout description value)))
      (let ((widget (make-widget "IntSliderModel" "IntSliderView" state)))
        (display-widget widget)
        widget))))

(define set-slider-value! (widget-updater 'value integer?))
(define set-slider-min! (widget-updater 'min integer?))
(define set-slider-max! (widget-updater 'max integer?))
(define set-slider-step! (widget-updater 'step integer?))
(define set-slider-orientation! (widget-updater 'orientation string?))
(define set-slider-disabled! (widget-updater 'disabled boolean?))
